/*
 * Даден е двумерен масив A[N,N] където N е цяло число в интервала [12,16] и се въвежда от клавиатурата.
 * Да се състави програма, която въвежда стойностите на елементите на масива и реализира следното:
 * 1. Намира средноаритметичната стойност от положителните елементи на масива
 * 2. Формира нов масив B, който има за елементи тези от елементите на A< които са разположени под главния диагонал
 * 3. Извежда на екрана променения масив в табличен вид
 */

#include <stdio.h>
#include <stdlib.h>
#include <windows.h>

int main() {
	SetConsoleOutputCP(1251); //активира кирилицата в конзолата
	int N; //създадохме променлива, в която ще вкараме бройката на редовете и стълбовете
	/*
	* с цикъл do-while ще следим дали въведеното числа за редове и стълбове влизат в интервала [12,16]
	*/
	do
	{
		printf("Въведете броят на редовете и стълбовете (цяло число в интевал [12,16]): ");
		scanf("%d", &N); //въвеждаме стойност цяло число за n от конзолата след горния надпис
	}while(N<12 || N>16);
	/*
	* while(N<12 || N>16); - така следим дали въведеното число не е
	* по-малко от 12 или по-голямо от 16
	* и ако е, ще ни кара да въвеждаме стойност наново, т.е. ще изпълнява цикъла докато
	* не въведем число в интевала от 12 до 16 (включително)
	*/

	float A[N][N]; //създаваме двумерен масив,който има N на брой редове и N стълбове
	float sum=0; //в sum ще запазим сумата на елементи на масива, които са положителни т.е. >0
	int counter=0; //с counter ще следим броя на елемените, който са > от 0
	int counter2=0; //с counter2 ще следим броя на елементите, който са под главния диагонал
	printf("\nВъведете елементите на двумерния масив A:\n");
	//следва цикъл в цикъл за обхождане  на целия масив и въвеждане на елементите:
	for(int i=0; i<N; i++)
	{
		for(int j=0; j<N; j++)
		{
			printf("A[%d][%d]= ", i, j); //изписва A[0][0]=, A[0][1]=, A[0][2]= и т.н.
			scanf("%f", &A[i][j]); //въвеждаме стойност за елемент на масива от клавиатурата
			if(A[i][j]>0) //когато въведения елемент е по-голям от 0
			{
			 	sum+=A[i][j]; //добавя елемента в sum
			 	counter++; //добавя +едно към counter (броя на елементите по-големи от 0)
	 		}
	 		if(i>j) //когато елемента се намира под главния диагонал
	 		{
	 			counter2++;
			}
		}
	}
 	float sredno=sum/counter; //средната стойност (sredno) е равна на сумата делено на бройката
 	printf("\nСредноаритметичната стойност от положителните елементи е: %f\n", sredno);

 	float B[counter2]; //правим масив B, който е с брой елементи, колкото са елементите под гл. диаг. на A
 	int index=0; // чрез променливата index ще следим поредния индекс на елементите на B като присвояваме
 	for(int i=0; i<N; i++)
	{
		for(int j=0; j<N; j++)
		{
			if(i>j) //когато елемента се намира под главния диагонал
			{
				B[index]=A[i][j]; //поредния елемент на масив B става равен на проедния елемент от A,
				//който е под главния диагонал
				index++; //добавяме към index +1, за да може следващито присвояване да е на следващия елемент
				// от масив B, все едно да напишем index = index+1;
			}
		}
	}
	
	printf("\nМасив B изглежда така:\n");
	for(int i=0; i<counter2; i++) printf("%f\t", B[i]); //извежда елементите на B таблично = \t
	
	printf("\n\n");
	//Когато използваме \n в printf това означава нов ред след него.
	system("pause"); //задържа конзоалта до натискането на клавиш (Press any key to continue . . .)
	return 0;
}
