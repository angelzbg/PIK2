/*
 * Задание за курсова работа вариант 29:
 * Даден е двумерен масив A[N,N], където N е цяло число в интервала [2,14] и се въвежда от клавиатурата.
 * Да се състави програма, която въвежда стойностите на елементите на масива и реализира следното:
 * 1. Намира в кой ред и стълб е разположен максималният по стойност елемент на масива
 * 2. Формира нов масив B, който съдържа елементите от главния диагонал на масив A със стойност в интервала [21,42]
 * 3. Извежда на екрана променения масив в табличен вид
 */
#include <stdio.h>
#include <stdlib.h>
#include <windows.h>

int main() {
	SetConsoleOutputCP(1251); //активира кирилицата в конзолата
	int N; //създадохме променлива, в която ще вкараме бройката на редовете и стълбовете
	/*
	* с цикъл do-while ще следим дали въведеното числа за редове и стълбове влизат в интервала [2,14]
	*/
	do
	{
		printf("Въведете броят на редовете и стълбовете (цяло число в интевал [2,14]): ");
		scanf("%d", &N); //въвеждаме стойност цяло число за n от конзолата след горния надпис
	}while(N<=2 || N>=14);
	/*
	* while(N<=2 || N>=14); - така следим дали въведеното число не е
	* по-малко или равно от 2 или по-голямо или равно от 14
	* и ако е, ще ни кара да въвеждаме стойност наново, т.е. ще изпълнява цикъла докато
	* не въведем число в интевала от 2 до 14 (т.е. м/у 2 и 14, но без 2 и 14)
	*/

	int A[N][N]; //създаваме двумерен масив с цели числа,който има N на брой редове и N стълбове
	printf("\nВъведете елементите на двумерния масив A:\n");
	//следва цикъл в цикъл за обхождане на целия масив:
	for(int i=0; i<N; i++)
	{
		for(int j=0; j<N; j++)
		{
			printf("A[%d][%d]= ", i, j); //изписва A[0][0]=, A[0][1]=, A[0][2]= и т.н.
			scanf("%d", &A[i][j]); //въвеждаме стойност за елемент на масива от клавиатурата
		}
	}

 	printf("\nДвумерният масив A изглежда така:\n");
	for(int i=0; i<N; i++) //обхождаме с цикъл в цикъл по редове и стълбове масив A за да го покажем
	{
		for(int j=0; j<N; j++)
		{
			printf("%d\t", A[i][j]);
		}
		printf("\n");
	}
	/* създаваме променливи за индексите и максимална стойност на елемента с най-голяма стойност: */
	int i_max, j_max, max=A[0][0]; //max съдържа стойността на първият елемент от масива
	//обхождаме целия масив за да намерим елемента с най-голяма стойност:
	for(int i=0; i<N; i++)
	{
		for(int j=0; j<N; j++)
		{
			if(A[i][j]>max) //проверяваме дали текущият елемент е по-голям от стойността на max
			{
				//ако намери елемент с по-голяма стойност изпълнява долните три неща:
				max = A[i][j]; //присвоява на max стойността на текущия елемент
				i_max = i; //присвоява на i_max стойността на индекса по ред на текущия елемент
				j_max = j;//присвоява на j_max стойността на индекса по стълб на текущия елемент
			}
		}
	}
	/*
	* създаваме масив с N на брой елементи
	* (не ни трябват повече защото ще съдържа само елементите по главния диагонал на двумерния масив)
	*/
	int B[N], counter=0; //counter ще ни е брояча на елементите на масив B
	//обхождаме масива за да намерим и присвоим елементите по главния диагонал на двумерния масив A
	//в новозъдадения масив B:
	for(int i=0; i<N; i++)
	{
		for(int j=0; j<N; j++)
		{
			if(i==j) //дали индекса на реда е = на индекса на стълба (т.е. е по главния диагонал)
			{
				//ако е се изпълняват долните
				B[counter]=A[i][j]; //присвояваме на B[индекс на елемент] текущия елемент на a
				counter++; //добавя едно към брояча за да може да запишем следващия елемент при
				//следващото обхождане на масива и намиране на елемент по диагонала
			}
		}
	}
	printf("\nМасив B, съдържащ елементите само по главния диагонал на масив A изглежда така:\n");
	for(int i=0; i<N; i++) //цикъл for за обхождане на масив B
	{
		printf("%d\t", B[i]); //принтване стойностите на елементите на масив B таблично
	} printf("\n");
	for(int i=0; i<N; i++) //цикъл for за обхождане на масив B
	{
		printf("B[%d]\t", i); //принтва индексите на елементите на масив B таблично
	} printf("\n\n");
	//Когато използваме \n в printf това означава нов ред след него.
	system("pause"); //задържа конзоалта до натискането на клавиш (Press any key to continue . . .)
	return 0;
}