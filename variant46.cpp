/*
 * Даден е двумерен масив A[N,M] където N,M са цели числа в интервала [2,6] и се въвеждат от клавиатурата.
 * Да се състави програма, която въвежда елементите на масива и реализира следното:
 * 1. Фирмира нов масив B, който има за елементи сумите по стълбове от елементите на масив A
 * 2. Коригира масив А, като изважда от положителните елементи 1, от отрицателните 10, а нулевите не променя
 * 3. Извежда на екрана променения масив в табличен вид
 */

#include <stdio.h>
#include <stdlib.h>
#include <windows.h>

int main() {
	SetConsoleOutputCP(1251); //активира кирилицата в конзолата
	int N, M; //създадохме променливи, в които ще вкараме бройката на редовете и стълбовете
	/*
	* с цикъл do-while ще следим дали въведеното числа за редове и стълбове влизат в интервала [2,6]
	*/
	do
	{
		printf("Въведете броят на редовете (цяло число в интевал [2,6]): ");
		scanf("%d", &N); //въвеждаме стойност цяло число за N от конзолата след горния надпис
	}while(N<=2 || N>=6);
	do
	{
		printf("Въведете броят на стълбовете (цяло число в интевал [2,6]): ");
		scanf("%d", &M); //въвеждаме стойност цяло число за N от конзолата след горния надпис
	}while(M<=2 || M>=6);
	/*
	* while(N<=2 || N>=6); - така следим дали въведеното число не е
	* по-малко или равно от 2 или по-голямо или равно от 6
	* и ако е, ще ни кара да въвеждаме стойност наново, т.е. ще изпълнява цикъла докато
	* не въведем число в интевала от 2 до 6 (т.е. м/у 2 и 6, но без 2 и 6)
	*/

	float A[N][M]; //двумерен масив, който има N на бр редове и M на бр стълбове
	printf("\nВъведете елементите на двумерния масив A:\n");
	//следва цикъл в цикъл за обхождане и въвеждане на елементите на целия масив:
	for(int i=0; i<N; i++)
	{
		for(int j=0; j<M; j++)
		{
			printf("A[%d][%d]= ", i, j); //изписва A[0][0]=, A[0][1]=, A[0][2]= и т.н.
			scanf("%f", &A[i][j]); //въвеждаме стойност за елемент на масива от клавиатурата
		}
	}
 	
 	float B[M]; //масив B, който има M на брой елементи, т.е. колкото стълба има масив A
 	int counter=0; //ще служи за следенето на индексите на масив B
 	for(int j=0; j<M; j++)
 	{
 		int i=0, sum=0;
 		while(i<N)
 		{
 			sum+=A[i][j];
 			i++;
		}
		B[counter]=sum;
		counter++;
	}
	
	printf("\nМасив B, съдържащ сумите по стълбове на масив A, изглежда така:\n");
	for(int i=0; i<M; i++) //цикъл for за обхождане на масив B
	{
		printf("%f ", B[i]); //принтване стойностите на елементите на масив B
	} printf("\n");
 	
 	//обхождаме масив А за да променим стойностите на елементите му по условие 2 от заданието
	for(int i=0; i<N; i++)
	{
		for(int j=0; j<M; j++)
		{
			if(A[i][j]>0) A[i][j] = A[i][j]-1.00;
			if(A[i][j]<0) A[i][j] = A[i][j]-10.00;
		}
	}
 	
 	printf("\nПромененият масив A изглежда така:\n");
	for(int i=0; i<N; i++)
	{
		for(int j=0; j<M; j++)
		{
			printf("%f\t", A[i][j]);
		}
		printf("\n");
	}
 	printf("\n\n");
	//Когато използваме \n в printf това означава нов ред след него.
	system("pause"); //задържа конзоалта до натискането на клавиш (Press any key to continue . . .)
	return 0; //връща стойност 0 от главната функция на програмата (просто добър навик за писане)
}