/*
 * Задание за курсова работа вариант 37:
 * Даден е двумерен  масив A[N,N] където N е цяло число в интервала [12,16] и се въвежда от клавиатурата.
 * Да се състави програма, която въвежда стойностите на елементите на масива и реализира следното:
 * 1. Намира средноаритметичната стойност от ненулевите елементи на масива
 * 2. Формира нов масив B, който има за елементи минималните елементи на масива A по редове.
 * 3. Извежда на екрана променения масив в табличен вид.
 */

#include <stdio.h>
#include <stdlib.h>
#include <windows.h>

int main() {
	SetConsoleOutputCP(1251); //активира кирилицата в конзолата
	int N; //създадохме променлива, в която ще вкараме бройката на редовете и стълбовете
	/*
	* с цикъл do-while ще следим дали въведеното числа за редове и стълбове влизат в интервала [12,16]
	*/
	do
	{
		printf("Въведете броят на редовете и стълбовете (цяло число в интевал [12,16]): ");
		scanf("%d", &N); //въвеждаме стойност цяло число за n от конзолата след горния надпис
	}while(N<12 || N>16);
	/*
	* while(N<12 || N>16); - така следим дали въведеното число не е
	* по-малко от 12 или по-голямо от 16
	* и ако е, ще ни кара да въвеждаме стойност наново, т.е. ще изпълнява цикъла докато
	* не въведем число в интевала от 12 до 16 (включително)
	*/

	float A[N][N]; //създаваме двумерен масив,който има N на брой редове и N стълбове
	float sum=0; //в sum ще запазим сумата на елементи на масива, които са различни от 0
	int counter=0; //с counter ще следим броя на елемените, който са различни от 0
	printf("\nВъведете елементите на двумерния масив A:\n");
	//следва цикъл в цикъл за обхождане  на целия масив и въвеждане на елементите:
	for(int i=0; i<N; i++)
	{
		for(int j=0; j<N; j++)
		{
			printf("A[%d][%d]= ", i, j); //изписва A[0][0]=, A[0][1]=, A[0][2]= и т.н.
			scanf("%f", &A[i][j]); //въвеждаме стойност за елемент на масива от клавиатурата
			if(A[i][j]!=0) //прави следното в блока { } когато елемента е различен от 0
			{
			 	sum+=A[i][j]; //добавя елемента в sum
			 	counter++; //добавя +едно към counter (броя на елементите различни от 0)
	 		}
		}
	}
 	float sredno=sum/counter; //средната стойност (sredno) е равна на сумата делено на бройката
 	printf("\nСредноаритметичната стойност от ненулевите елементи е: %f\n", sredno);
 	/*Пояснение: Щом масив B ще има за елементи минималните елементи на масив А
	 *то тогава за всеки ред от А има по един изходен елемент,
	 *т.е. масив B ще има брой елементи, колкото са броя на редовете в масив A
	 */
 	float B[N]; //масив B с брой елементи, равни на броя на редовете на масива
 	for(int i=0; i<N; i++)
	{
		float min=A[i][0]; //даваме начална стойност на min първия елемент от реда при всяко завъртане на цикъла
		for(int j=1; j<N; j++) //започваме от 1 защото вече сме присвоили първия елемент от реда на min
		{
			if(A[i][j]<min) min=A[i][j]; //когато елемента е по-малък от min, то min става равен на елемента
		}
		B[i]=min; //вкарваме стойността на min в пореден елемент на масив B при всяко завъртане на цикъла
	} //Променливата min съществува само в цикъла, извън него тя е неизползваема (не че ти трябва)
	
	printf("\nМасив A изглежда така:\n");
	for(int i=0; i<N; i++)
	{
		for(int j=0; j<N; j++)
		{
			printf("%f\t", A[i][j]);//елементите на всеки ред се принтват през табспейс (табличен вид)
		}
		printf("\n"); /* т'ва го правим за да може всеки ред от масив А да се изкара на нов ред
		за да изглежда точно като една матрица*/
	}
	
	/*Пояснение: В заданието пише да се изкара променения масив А, но никъде не пише и никъде не променяме
	*този масив. Може би е имала предвид да се изкара новият масив B, затова ти го пиша долу като коментар
	*/
	
	/*
	printf("\nМасив B изглежда така:\n");
	for(int i=0; i<N; i++) printf("%f\t", B[i]); //изкарва масив B в табличен вид
	*/
	
	
	printf("\n\n");
	//Когато използваме \n в printf това означава нов ред след него.
	system("pause"); //задържа конзоалта до натискането на клавиш (Press any key to continue . . .)
	return 0;
}


